@page "/loadedfilelistdisplay"
@using AgaiUI.Data
@using Agai
@using Newtonsoft.Json;

@if (@LoadedFiles is null)
{
    <div>Loading...</div>
}
else
{
    <div class="loadedFileList">
        <div>
            Loaded Files:
        </div>
        <table class="loadedFileHolder" @onload='()=>SortBy("LastModified")'>
            <tbody>
                <tr>
                    <th @onclick='()=>SortBy("Name")'>
                        Name <SortUpDownDisplay SortDescending="@SortDescending" Name="Name" Current="@SelectedSort" />
                    </th>
                    <th @onclick='()=>SortBy("LastModified")'>
                        Last modified <SortUpDownDisplay SortDescending="@SortDescending" Name="LastModified" Current="@SelectedSort" />
                    </th>

                    <th @onclick='()=>SortBy("SizeInBytes")'>
                        Size (bytes) <SortUpDownDisplay SortDescending="@SortDescending" Name="SizeInBytes" Current="@SelectedSort" />
                    </th>
                    <th>Content type</th>
                </tr>
                @foreach (var file in LoadedFiles)
                {
                    <LoadedFileDisplay File="@file" FileSelected="@FileSelected" />
                }
            </tbody>
        </table>
    </div>
}

@code {
    [Parameter]
    public List<HelpfulFileData>? LoadedFiles { get; set; }

    [Parameter]
    public EventCallback<HelpfulFileData> FileSelected { get; set; }
    public string SelectedSort { get; set; } = "LastModified";

    bool SortDescending = true;

    void SortBy(string name)
    {
        if (LoadedFiles is null) return;
        if (SelectedSort is not null)
            SortDescending = !SortDescending;
        SelectedSort = name;
        if (SelectedSort == "Name")
            LoadedFiles = (SortDescending ?
                LoadedFiles.OrderByDescending(f => f.FileInfo.Name)
                : LoadedFiles.OrderBy(f => f.FileInfo.Name)).ToList();

        else if (SelectedSort == "LastModified")
            LoadedFiles = (SortDescending ?
                LoadedFiles.OrderByDescending(f => f.FileInfo.Size)
                : LoadedFiles.OrderBy(f => f.FileInfo.Size)).ToList();
        else
            LoadedFiles = (SortDescending ?
                LoadedFiles.OrderByDescending(f => f.FileInfo.LastModified)
                : LoadedFiles.OrderBy(f => f.FileInfo.LastModified)).ToList();
    }
}
