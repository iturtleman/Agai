@page "/energyflowgrideditor"
@using System.Linq
@using Agai

@if (Grid is null)
{
    <div>Loading...</div>
}
else
{
    if (!Open)
    {
        <div>Name: @Grid.Name</div>
    }
    else
    {
        <div class="energyFlowGridEditor">
            <div class="energyFlowGridEditorHeader">@Grid.Name</div>
            <div class="energyFlowGridEditorGrid" style="grid-template-columns: repeat(@Grid.Width, 1fr);
    background: url(@GridBackground);">
                @if (Grid.Panels.All(p => p is null))
                {
                    <button @onclick="InitGridToAllEnabled">
                        Init
                    </button>
                }
                @if (Grid.Panels.Any())
                {
                    var i = 0;
                    @foreach (var panel in Grid.Panels)
                    {
                        if (panel == null)
                        {
                            // todo extract
                            <div class="emptyPanel" />
                        }
                        else
                        {
                            var index = i++;
                            <EnergyFlowPanelDisplay Panel="@panel" Index="index" PanelModified="SelectCampObject" />
                        }
                    }
                }
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public EnergyFlowGrid Grid { get; set; }

    [Parameter]
    public bool Open { get; set; } = false;

    public string GridBackground => $"assets/energybackgrounds/{Grid.Name}.jpg";

    protected async Task InitGridToAllEnabled()
    {
        Grid.Panels = Enumerable.Range(0, Grid.Width * Grid.Height)
            .Select(a => EnergyFlowPanel.Default)
            .ToList();
        await Task.CompletedTask;
    }

    private void SelectCampObject((EnergyFlowPanel Panel, int Index) newPanelStatus)
    {
        Grid.Panels[newPanelStatus.Index] = newPanelStatus.Panel;
        StateHasChanged();
    }
}
